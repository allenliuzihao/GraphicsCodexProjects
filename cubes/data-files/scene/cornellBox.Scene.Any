// -*- c++ -*-
{
    name = "Cornell Box";

    models = {
        squishedCubeLeft = ArticulatedModel::Specification {
            // this crate model is a cube of length 1m
            filename = "model/cube/cube.obj";
            preprocess = {
                setMaterial(all(), Color3(1, 0, 0));
                transformGeometry(all(), Matrix4::scale(0.01, 1.0, 1.0));
            };
        };

        squishedCubeRight = ArticulatedModel::Specification{
            // this crate model is a cube of length 1m
            filename = "model/cube/cube.obj";
            preprocess = {
                setMaterial(all(), Color3(0, 1, 0));
                transformGeometry(all(), Matrix4::scale(0.01, 1.0, 1.0));
            };
        };

        squishedCube = ArticulatedModel::Specification{
            // this crate model is a cube of length 1m
            filename = "model/cube/cube.obj";
            preprocess = {
                setMaterial(all(), Color3(1, 1, 1));
                transformGeometry(all(), Matrix4::scale(0.01, 1.0, 1.0));
            };
        };

        cube = ArticulatedModel::Specification{
            // this crate model is a cube of length 1m
            filename = "model/cube/cube.obj";
            preprocess = {
                setMaterial(all(), UniversalMaterial::Specification{
                    glossy = Color4(
                        Color3(0.05),
                        0.05);
                    lambertian = Color3(0.7);
                });
                transformGeometry(all(), Matrix4::scale(0.25, 0.25, 0.25));
            };
        };

        rect = ArticulatedModel::Specification{
            // this crate model is a cube of length 1m
            filename = "model/cube/cube.obj";
            preprocess = {
                setMaterial(all(), UniversalMaterial::Specification{
                    glossy = Color4(
                        Color3(0.05),
                        0.05);
                    lambertian = Color3(0.7);
                });
                transformGeometry(all(), Matrix4::scale(0.25, 0.8, 0.25));
            };
        };
    };

    entities = {
       skybox = Skybox {
            texture = "cubemap/whiteroom/whiteroom-*.png";
       };

       sun = Light {
            attenuation = (0.1, 0.1, 0.1);
            bulbPower = Power3(3, 3, 3);
            castsShadows = true;
            shadowsEnabled = true;
            enabled = true;
            frame = CFrame::fromXYZYPRDegrees(0, 0.48, 0, 90, -90, 0);
            shadowMapSize = Vector2int16(4096, 4096);
            rectangular = true;
            spotHalfAngleDegrees = 87;
            type = "SPOT";
        };

        cubeLeft = VisibleEntity {
            model = "squishedCubeLeft";
            frame = CFrame::fromXYZYPRDegrees(-0.5, 0, 0, 0, 0, 0);
        };

        cubeRight = VisibleEntity{
            model = "squishedCubeRight";
            frame = CFrame::fromXYZYPRDegrees(0.5, 0, 0, 0, 0, 0);
        };

        cubeBack = VisibleEntity{
            model = "squishedCube";
            frame = CFrame::fromXYZYPRDegrees(0, 0, -0.5, 90, 0, 0);
        };

        cubeTop = VisibleEntity{
            model = "squishedCube";
            frame = CFrame::fromXYZYPRDegrees(0, 0.5, 0, 0, 0, 90);
        };

        cubeBottom = VisibleEntity{
            model = "squishedCube";
            frame = CFrame::fromXYZYPRDegrees(0, -0.5, 0, 0, 0, 90);
        };

        cube = VisibleEntity{
            model = "cube";
            frame = CFrame::fromXYZYPRDegrees(0.23, -0.36, 0.23, 30, 0, 0);
        };

        rect = VisibleEntity{
            model = "rect";
            frame = CFrame::fromXYZYPRDegrees(-0.23, -0.1, -0.23, 45, 0, 0);
        };

        camera = Camera {
            frame = CFrame::fromXYZYPRDegrees(0, 0, 5);
        };
    };
};